General:
- Remember ".iol" files
  - are they still used?
- Error reporting?
- documentation and code comments
- README's include: main structure / navigation, testing, use cases, ...

Testing:
- IntegrationTest
  - JolieReader & JolieWriter
    - ImportDecl
      - Import
        - ("from" ID "import" ID)
        - ("from" ID "import" ID Line)
      - Include
        - ("include" ID(String))

    - InterfaceDecl // missing ("throws" ID) might be better to do Line
      - ("interface" ID "{" RequestResponseDecl "}")
      - ("interface" ID "{" OneWayDecl "}")
      - ("interface" ID "{" RequestResponseDecl OneWayDecl "}")
      - ("interface" "extender" ID "{" RequestResponseDecl "}")
      - ("interface" "extender" ID "{" OneWayDecl "}")
      - ("interface" "extender" ID "{" RequestResponseDecl OneWayDecl "}")
        - RequestResponseDecl
          - ("requestResponse" ":" RequestResponseElement)
          - ("requestResponse" ":" RequestResponseElement ("," RequestResponseElement)*)
          - ("RequestResponse" ":" RequestResponseElement)
          - ("RequestResponse" ":" RequestResponseElement ("," RequestResponseElement)*)
        - OneWayDecl
          - ("oneWay" ":" OneWayElement)
          - ("oneWay" ":" OneWayElement ("," OneWayElement)*)
          - ("OneWay" ":" OneWayElement)
          - ("OneWay" ":" OneWayElement ("," OneWayElement)*)

    - TypeDecl
      - ("type" ID Block)
      - ("type" ID ":" ID)
      - ("type" ID ":" ID Block)
      - ("type" ID ":" ID ("|" ID)* // TODO: fail

    - ServiceDecl
      - ("service" ID "{" Service* "}")
      - ("service" ID ( "(" ID* ")" ) "{" Service* "}")
      - ("service" ID "{" Service* "}"), ("service" ID "{" Service* "}")
      - Service
        - Execution
          - ("execution" ":" ID)
          - ("execution" "{" ID "}")
        - Embed
          - "embed" ID "as" ID
          - "embed" ID "in" ID
          - "embed" ID (ID*) "as" ID
          - "embed" ID (ID*) "in" ID
        - Embedded
          - "embedded" Block
        - InputPort
          - ("inputPort" ID "{" PortLocation "}")
          - ("inputPort" ID "{" PortProtocol "}")
          - ("inputPort" ID "{" PortInterfaces "}")
          - ("inputPort" ID "{" PortAggregates "}")
          - ("inputPort" ID "{" PortRedirects "}")
          - ("inputPort" ID "{" PortLocation PortProtocol PortInterfaces PortAggregates PortRedirects "}")
        - OutputPort
          - ("outputPort" ID "{" PortLocation "}")
          - ("outputPort" ID "{" PortProtocol "}")
          - ("outputPort" ID "{" PortInterfaces "}")
          - ("outputPort" ID "{" PortLocation PortProtocol PortInterfaces "}")
        - PortParams
          - PortLocation
            - ("location" ":" Token)
            - ("Location" ":" Token)
          - PortProtocol
            - ("protocol" ":" Token)
            - ("Protocol" ":" Token)
            - ("protocol" ":" Token*)
            - ("Protocol" ":" Token*)
          - PortInterfaces
            - ("interfaces" ":" Token)
            - ("Interfaces" ":" Token)
            - ("interfaces" ":" Token ( Token )*)
            - ("Interfaces" ":" Token ( Token )*)
          - PortAggregates
            - ("aggregates" ":" Token)
            - ("Aggregates" ":" Token)
            - ("aggregates" ":" Token ( Token )*)
            - ("Aggregates" ":" Token ( Token )*)
          - PortRedirects
            - ("redirects" ":" Token)
            - ("Redirects" ":" Token)
            - ("redirects" ":" Token ( Token )*)
            - ("Redirects" ":" Token ( Token )*)
        - Init
          - "init" Block
        - Main
          - "main" Block
        - Courier
          - "courier" "<" ID ">" Block
        - DefineProcedure
          - "define" ID Block
    - Block
      - Empty
      - Not empty
    - Line
      - Empty
      - Not empty
    - Comments
      - In line
      - End line
      - Multi line
    - EOF
      - one first line
      - on second line
      - on same line as end of code
      - 2 lines after end of code


- Other manual
  - test extraction on
    - smaller and larger changes commited
    - better and worse descriptions

For Report:
- Why not the Jolie parser
  - jolie parser "optimises" (changes) code during execution causing changes in code when compared with original
    - loss of data and changes to original
    - Give examples using jolie printer (git)
  - (Write from perspective of what I did, not what I didn't do)
- cast all end line symbols to \n
- pre and post lexeme for printing
